// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// FollowsColumns holds the columns for the "follows" table.
	FollowsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Default: "CURRENT_TIMESTAMP"},
		{Name: "updated_at", Type: field.TypeTime, Default: "CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP"},
		{Name: "user_id", Type: field.TypeUint64, Nullable: true},
		{Name: "followee_id", Type: field.TypeUint64, Nullable: true},
	}
	// FollowsTable holds the schema information for the "follows" table.
	FollowsTable = &schema.Table{
		Name:       "follows",
		Columns:    FollowsColumns,
		PrimaryKey: []*schema.Column{FollowsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "follows_users_user",
				Columns:    []*schema.Column{FollowsColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "follows_users_followee",
				Columns:    []*schema.Column{FollowsColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// MehsColumns holds the columns for the "mehs" table.
	MehsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Default: "CURRENT_TIMESTAMP"},
		{Name: "updated_at", Type: field.TypeTime, Default: "CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP"},
		{Name: "text", Type: field.TypeString},
		{Name: "user_id", Type: field.TypeUint64, Nullable: true},
	}
	// MehsTable holds the schema information for the "mehs" table.
	MehsTable = &schema.Table{
		Name:       "mehs",
		Columns:    MehsColumns,
		PrimaryKey: []*schema.Column{MehsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "mehs_users_user",
				Columns:    []*schema.Column{MehsColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TimelinesColumns holds the columns for the "timelines" table.
	TimelinesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Default: "CURRENT_TIMESTAMP"},
		{Name: "updated_at", Type: field.TypeTime, Default: "CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP"},
		{Name: "user_id", Type: field.TypeUint64, Nullable: true},
		{Name: "meh_id", Type: field.TypeUint64, Nullable: true},
	}
	// TimelinesTable holds the schema information for the "timelines" table.
	TimelinesTable = &schema.Table{
		Name:       "timelines",
		Columns:    TimelinesColumns,
		PrimaryKey: []*schema.Column{TimelinesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "timelines_users_user",
				Columns:    []*schema.Column{TimelinesColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "timelines_mehs_meh",
				Columns:    []*schema.Column{TimelinesColumns[4]},
				RefColumns: []*schema.Column{MehsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Default: "CURRENT_TIMESTAMP"},
		{Name: "updated_at", Type: field.TypeTime, Default: "CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP"},
		{Name: "screen_name", Type: field.TypeString, Unique: true},
		{Name: "state", Type: field.TypeEnum, Enums: []string{"active", "suspended"}, Default: "active"},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		FollowsTable,
		MehsTable,
		TimelinesTable,
		UsersTable,
	}
)

func init() {
	FollowsTable.ForeignKeys[0].RefTable = UsersTable
	FollowsTable.ForeignKeys[1].RefTable = UsersTable
	MehsTable.ForeignKeys[0].RefTable = UsersTable
	TimelinesTable.ForeignKeys[0].RefTable = UsersTable
	TimelinesTable.ForeignKeys[1].RefTable = MehsTable
}
